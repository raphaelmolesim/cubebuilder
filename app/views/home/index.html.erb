<form id="search_card">
	
	<input type="text" name="card_name" id="card_name" >

</form>

<div id="card_list">
	
</div>

<div id="cube">
	
</div>


<script>

$(document).ready(function(){
	
	Handlebars.registerHelper('json', function(context) {
	    return JSON.stringify(context);
	});
	
	function cubeSafeGet(cube, color, type, index) {		
		if (type == null)
			return cube[color][index] != null ? cube[color][type][index].name : "";
		
		return cube[color][type][index] != null ? cube[color][type][index].name : "";
	}
	
	Handlebars.registerHelper('cubeIterator', function(from, to, incr, type, block) {
	    var accum = '';
			data = Handlebars.createFrame(block.data);
	    for(var i = from; i < to; i += incr) {
				data.index = i;
			
				data.black = cubeSafeGet(this, "Black", type, i)
				data.blue = cubeSafeGet(this, "Blue", type, i);
				data.red = cubeSafeGet(this, "Red", type, i);
				data.white = cubeSafeGet(this, "White", type, i);
				data.green = cubeSafeGet(this, "Green", type, i);
				data.colorless = cubeSafeGet(this, "Colorless", type, i);
				data.multicolor = cubeSafeGet(this, "Multicolor", type, i);
				data.land = cubeSafeGet(this, "Land", null, i);

	    	accum += block.fn(this, { data: data });					
	    }
	      
	    return accum;
	});
	
	function getCardInfo(card_name){
		return $.ajax({
		  method: "GET",
		  url: "/card/search",
  		data: { card_name : card_name }
		});
	}
	
	$("#search_card").on('submit', function(e) {
		e.preventDefault();
		card_name = $("#card_name").val();
		getCardInfo(card_name).done(function(response) {
			if (response == "")
				return $("#card_list").html("Not Found");
				
			text = HandlebarsTemplates['cards/show'](JSON.parse(response));
			$("#card_list").html(text);
  	});
		
	});
	
	$("#card_list").on('click', $("a.add-card"), function(e) {
		card_name = $(e.toElement).data("id");

		cubeList = [];
		if (localStorage.cube_list != undefined)
			cubeList = JSON.parse(localStorage.cube_list);
		
		uniqueness = true;
		cubeList.forEach(function(item) {
			uniqueness = uniqueness && item != card_name;
		});
		
		if (uniqueness) 
			cubeList.push(card_name);
		
		addCard(cubeList);
	});
	
	function addCard(cubeList) {
		localStorage.setItem("cube_list", JSON.stringify(cubeList));
		$.ajax({
		  method: "PUT",
		  url: "/cubes/" + <%= session[:cube_id] %>,
  		data: JSON.stringify( { cube : { cards : cubeList } }),
      contentType: "application/json",
			dataType: "json"
		}).done(function() {
			$("#card_list").html("");			
		}).fail(function(e){
			$("#card_list").html("Error trying to save cube!");
		});
		renderCube(cubeList);		
	};
	
	var loadCube = function(cubeList) {
		return $.ajax({
		  method: "GET",
		  url: "/card/cube_load",
  		data: { cards_ids : cubeList }
		});
	};
	
	function renderCube(cubeList) {
		loadCube(cubeList)
		.done(function(response) {
			json_response = JSON.parse(response);
			spellsLenghts = [ 
									json_response["Black"]["Spells"].length, 
									json_response["Blue"]["Spells"].length,
									json_response["Red"]["Spells"].length,
									json_response["White"]["Spells"].length, 
									json_response["Green"]["Spells"].length,
									json_response["Colorless"]["Spells"].length,
									json_response["Multicolor"]["Spells"].length
								];
								
			creatureLenghts = [ 
									json_response["Black"]["Creatures"].length, 
									json_response["Blue"]["Creatures"].length,
									json_response["Red"]["Creatures"].length,
									json_response["White"]["Creatures"].length, 
									json_response["Green"]["Creatures"].length,
									json_response["Colorless"]["Creatures"].length,
									json_response["Multicolor"]["Creatures"].length
								];
			spellsLenghts.sort(function(a, b){return b-a});
			json_response["SpellsMaxLength"] = spellsLenghts[0];
			
			creatureLenghts.sort(function(a, b){return b-a});
			json_response["CreaturesMaxLength"] = creatureLenghts[0];
			
			text = HandlebarsTemplates['cards/cube'](json_response);
			$("#cube").html(text);	
			
		});	
	}
	
	if (localStorage.cube_list != undefined)
		renderCube(JSON.parse(localStorage.cube_list))
		
			
	
});


</script>